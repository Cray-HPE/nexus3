name: Nightly build, sign, and scan image

on:
  schedule:
    - cron: '30 2 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write
      security-events: write

    # Note: on.schedule triggered workflows ALWAYS run on the default branch.
    # This matrixed job checks out specific refs to build, sign, and scan;
    # however, care is taken to make sure individual steps reference the
    # correct Git ref and commit SHA as opposed to what's in the github context
    # (e.g., github.ref and github.sha).

    strategy:
      matrix:
        ref:
          - main
          - v3.25.0-2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.ref }}

      - name: Set Git parameters
        id: git
        env:
          REF: ${{ matrix.ref }}
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify "$REF")"
          echo "::set-output name=ref::$(git rev-parse --verify --symbolic-full-name "$REF")"

      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: artifactory.algol60.net/csm-docker
          username: ${{ secrets.ARTIFACTORY_ALGOL60_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_ALGOL60_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Cosign
        uses: Cray-HPE/github-actions/setup-cosign@main

      - name: Build image
        id: build
        uses: Cray-HPE/github-actions/container-images/build@main
        with:
          stable-images: artifactory.algol60.net/csm-docker/stable/nexus3
          unstable-images: artifactory.algol60.net/csm-docker/unstable/nexus3
          tags: type=raw,value=sha-${{ steps.git.outputs.sha }}

      - name: Sign image
        uses: Cray-HPE/github-actions/container-images/sign@main
        with:
          images: ${{ join(fromJSON(steps.build.outputs.refs), '\n') }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ fromJSON(steps.build.outputs.refs)[0] }}
          ignore-unfixed: true
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy.sarif

      - name: Upload results to GitHub Code Scanning
        #uses: github/codeql-action/upload-sarif@v1
        # See https://github.com/github/codeql-action/pull/889
        uses: cw-acroteau/codeql-action/upload-sarif@add-ref-input
        with:
          ref: ${{ steps.git.outputs.ref }}
          sha: ${{ steps.git.outputs.sha }}
          sarif_file: trivy.sarif

