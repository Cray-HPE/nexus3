name: Build, sign, and scan image

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - release/**
  workflow_dispatch:

#jobs:
#  build:
#    uses: Cray-HPE/.github/.github/workflows/container-image-build.yml@main
#    with:
#      name: nexus3
#      #stable: startsWith(github.ref, 'refs/tags/v')
#      #tags: |-
#      #  type=schedule
#      #  type=ref,event=branch
#      #  type=ref,event=pr
#      #  type=semver,pattern={{version}}
#      #  type=semver,pattern={{major}}.{{minor}}
#      #  type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
#      snyk-args: --file=Dockerfile --severity-threshold=medium
#      upload-scan-results: ${{ github.event_name != 'pull_request' }}
#    secrets:
#      registry-username: ${{ secrets.ARTIFACTORY_ALGOL60_USERNAME }}
#      registry-password: ${{ secrets.ARTIFACTORY_ALGOL60_TOKEN }}
#      snyk-token: ${{ secrets.SNYK_TOKEN }}
#    permissions:
#      contents: read
#      id-token: write
#      security-events: write

jobs:
  build:
    name: Build and push image

    runs-on: ubuntu-latest

    permissions:
      contents: read

    outputs:
      refs: ${{ steps.build.outputs.refs }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: artifactory.algol60.net/csm-docker
          username: ${{ secrets.ARTIFACTORY_ALGOL60_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_ALGOL60_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image
        id: build
        uses: Cray-HPE/github-actions/container-images/build@main
        with:
          stable-images: artifactory.algol60.net/csm-docker/stable/nexus3
          unstable-images: artifactory.algol60.net/csm-docker/unstable/nexus3

  sign:
    name: Sign image

    needs: build
    runs-on: ubuntu-latest

    permissions:
      id-token: write

    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@main

      - name: Check cosign install
        run: cosign version

      - name: Sign image refs with GitHub OIDC Token **not production ready**
        env:
          IMAGES: ${{ join(fromJSON(needs.build.outputs.refs), ' ') }}
          COSIGN_EXPERIMENTAL: 1
        run: cosign sign "$IMAGES"

  trivy:
    name: Scan image (Trivy)
    #if: ${{ github.event_name == 'pull_request' }}

    needs: build
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      security-events: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      #- run: docker pull "$IMAGE"
      #  env:
      #    IMAGE: ${{ fromJSON(needs.build.outputs.refs)[0] }}

      - name: Run Trivy vulnerability scanner
        id: trivy
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: ${{ fromJSON(needs.build.outputs.refs)[0] }}
          exit-code: '1'
          output: trivy.txt


      - name: Run Trivy vulnerability scanner (JSON results)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ fromJSON(needs.build.outputs.refs)[0] }}
          format: table
          output: trivy.json

      - name: Upload Trivy results (table)
        uses: actions/upload-artifact@v2
        with:
          name: trivy-results
          path: |
            trivy.txt
            trivy.json
          retention-days: ${{ needs.build.outputs.stable == 'true' && 90 || 5 }}

      - name: Run Trivy vulnerability scanner (**fixable**)
        if: ${{ needs.build.outputs.stable == 'true' }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ fromJSON(needs.build.outputs.refs)[0] }}
          ignore-unfixed: true
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy.sarif

      - name: Upload fixable Trivy vulnerabilities to GitHub Code Scanning
        if: ${{ hashFiles('trivy.sarif') != ''}}
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: trivy.sarif

      - name: Check if scans found vulnerabilities
        if: ${{ steps.trivy.outcome == 'failure' }}
        run: echo "::error::Trivy scan found vulnerabilities"
