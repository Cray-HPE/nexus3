#!/bin/bash

# Copyright 2021 Hewlett Packard Enterprise Development LP

BASE_URL=http://localhost:8081/service/rest
REALM_URL=${BASE_URL}/beta/security/realms/active
AUTH_HDR='X-WEBAUTH-USER: admin'

log() {
  # Send messages from here to the standard out and the Nexus process so we see this output in the pod log.
  LOG=/proc/1/fd/1
  if [[ ! -z "$1" ]]; then echo "$(date) [$0] $1" | tee $LOG; fi
}

nexus_ready() {
  NEXUS_URL=${BASE_URL}/v1/status/writable
  if ! curl -s "${NEXUS_URL}/v1/status/writable" >/dev/null 2>&1; then
    log "Not ready at $NEXUS_URL"
    return 1
  fi
}

command -v jq >/dev/null 2>&1 || { log  "command not found: jq"; exit 1; }

# Verify Nexus is up
until nexus_ready; do
  log "Waiting for Nexus to be ready"
  sleep 2
done

log "Preparing to enable the Keycloak authentication security realm..."

# Check to see if the realm has already been configured and exit if so.
curl -s "${REALM_URL}" -H "${AUTH_HDR}" | grep \"org.github.flytreeleft.nexus3.keycloak.plugin.KeycloakAuthenticatingRealm\" 1>&2 >/dev/null
status=$?
if [[ $status -eq 0 ]]
then 
  log "The KeycloakAuthenticatingRealm is already configured.  Done."
  exit 0
fi

# Insert the Keycloak plugin as the first item in the existing ordered list so that
# authentication will fall back to Remote User Token (RUT) authentication if Keycloak
# is not available or missing the user trying to authenticate.
curl -s "${REALM_URL}" -H "${AUTH_HDR}" \
    | jq '.|=["org.github.flytreeleft.nexus3.keycloak.plugin.KeycloakAuthenticatingRealm"]+.' \
    | curl -s -X PUT \
        "${REALM_URL}" -H "${AUTH_HDR}" \
        -H 'Content-Type: application/json' \
        -d @-
status=$?
if [[ $status -eq 0 ]]
then 
  log "Complete"
else
  log "Failed" 
fi
exit $status
